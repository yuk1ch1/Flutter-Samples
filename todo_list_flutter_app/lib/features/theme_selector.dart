// このようなファイルをバレル（barrel）と呼びます。バレルは、複数のモジュールを1つのモジュールにまとめ上げるための技術です。このようなファイルを用意する主な理由は以下の通りです：
//
// 簡潔なインポート:
// 複数の関連するモジュールを一度にインポートする際に、一つのファイルを参照するだけで済むようになります。これにより、コードが簡潔になり、読みやすくなります。
// 例えば、theme_mode_ext.dartとtheme_selector_provider.dartの両方を使用する場合、以下のように2行でインポートする代わりに：
// dart
// Copy code
// import 'path_to_file/theme_mode_ext.dart';
// import 'path_to_file/theme_selector_provider.dart';
// バレルを使用して1行でインポートできます：
// dart
// Copy code
// import 'path_to_file/barrel_file.dart';
// 構造の整理:
// 関連するモジュールを1つの場所にまとめることで、ディレクトリやパッケージの構造を整理し、管理しやすくします。
// リファクタリングの簡素化:
// モジュールの場所や名前を変更した場合、バレルの中だけを更新すれば、他の部分のコードはそのままで問題なく動作します。
// APIの公開範囲の制御:
// ライブラリやパッケージを公開する際、公開したい部分だけをバレルに含めることで、APIの公開範囲を制御することができます。
// 総じて、バレルはコードの整理や管理を助け、開発の効率を向上させる役割があります。
export 'theme_mode_ext.dart';
export 'theme_selector_provider.dart';

